<?xml version="1.0" encoding="UTF-8"?>
<window>
	<defaultcontrol always="true">9000</defaultcontrol>
	
	<onunload condition="Container(9000).Hasfocus(10) | Container(9000).Hasfocus(11) | ControlGroup(9010).HasFocus | ControlGroup(9016).HasFocus | ControlGroup(9017).HasFocus">SetProperty(VideosDirectLink,True)</onunload>
	<onunload condition="ControlGroup(9011).HasFocus">SetProperty(MusicDirectLink,True)</onunload>
	
	<onunload condition="Control.HasFocus(9000) + Container(9000).Hasfocus(2)">ClearProperty(VideosDirectLink)</onunload>
	<onunload condition="Control.HasFocus(9000) + Container(9000).Hasfocus(3)">ClearProperty(MusicDirectLink)</onunload>
	
	<onload condition="!String.IsEmpty(Window(home).Property(OSDinfodialogButtonActive))">ClearProperty(OSDinfodialogButtonActive,home)</onload>
	
	
	
	
	<!-- KODI 18 defaultcontrol bug fix -->
	<onload condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + Window.IsActive(Home)">SetFocus(9000,0)</onload>
	<!--
	<onload condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + Window.IsActive(Home)">Notification(XXXXX,XXX,4000)</onload>
	<onunload condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix))">SetProperty(HomeDefaultControlTempFix,done,home)</onunload>
	-->
	<!--
	<onunload>CancelAlarm(HomeDefaultControlTempFixAlarm,silent)</onunload>
	-->
	<onunload condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix))">AlarmClock(HomeDefaultControlTempFixAlarm,SetProperty(HomeDefaultControlTempFix,done,home),00:00:01,silent)</onunload>
	<!--
	<onload>AlarmClock(asdasdasdf,SetFocus(10),00:00:02,silent)</onload>
	<onunload>SetProperty(HomeDefaultControlTempFix,True,home)</onunload>
	-->
	
	
	
	<controls>
		
		<!-- WRAPPER START -->
		<control type="group">
			<left>0</left>
			<top>0</top>
			<width>1280</width>
			<height>720</height>
		<!-- WRAPPER START -->
		
		<include>CommonBackground</include>
		
		<control type="group">
		<include>idleFadeOutMedium</include>
		<control type="image">
			<left>0</left>
			<top>0</top>
			<width>1280</width>
			<height>720</height>
			<texture>_added_img/100x100_black.png</texture>
			<animation effect="fade" end="0" time="0" condition="String.IsEqual(Skin.String(BackgroundDarkenStrength),0)">Conditional</animation>
			<animation effect="fade" end="50" time="0" condition="String.IsEmpty(Skin.String(BackgroundDarkenStrength)) | String.IsEqual(Skin.String(BackgroundDarkenStrength),1)">Conditional</animation>
			<animation effect="fade" end="50" time="0" condition="String.IsEqual(Skin.String(BackgroundDarkenStrength),2)">Conditional</animation>
			<animation effect="fade" end="75" time="0" condition="String.IsEqual(Skin.String(BackgroundDarkenStrength),3)">Conditional</animation>
		</control>
		</control>
		
		
		<!-- LiveTV TIMER RECORDING INFO BLOCK -->
		<control type="group">
			<depth>DepthMenu</depth>
			<left>490r</left>
			<top>84</top><!-- 70 80 84test -->
			<visible>[PVR.IsRecording | PVR.HasNonRecordingTimer]</visible><!--Container(9000).HasFocus(12)-->
			<include>VisibleFadeEffect</include>
			<include>Window_OpenClose_Animation</include>
			<!--<animation effect="fade" start="100" end="0" time="150" condition="Window.IsActive(Favourites)">conditional</animation>-->
			<control type="group">
				<animation effect="slide" start="0,0" end="0,100" time="0" condition="PVR.IsRecording">conditional</animation>
				<visible>PVR.HasNonRecordingTimer</visible>
				<control type="group">
					<control type="image">
						<left>361</left>
						<top>-5</top>
						<width>214</width>
						<height>90</height>
						<texture>_added_img/100x100_black.png</texture>
						<!-- MOD -->
						<visible>!Container(9000).HasFocus(12)</visible>
						<animation effect="fade" start="100" end="0" time="350" delay="350">Hidden</animation>
					</control>
					<control type="image">
						<left>0</left>
						<top>-5</top>
						<width>490</width>
						<height>90</height>
						<texture>_added_img/100x100_black.png</texture>
						<!-- MOD -->
						<visible>Container(9000).HasFocus(12)</visible>
						<animation effect="fade" start="0" end="100" time="650" delay="0">Visible</animation>
					</control>
					<animation effect="fade" start="0" end="40" time="0" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<left>400</left>
					<top>0</top>
					<width>80</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" fallback="DefaultVideoCover.png">$INFO[PVR.NextRecordingChannelIcon]</texture>
					<bordertexture border="8">ThumbBorder666.png</bordertexture>
					<bordersize>4</bordersize>
				</control>
				<control type="image">
					<left>368</left>
					<top>6</top>
					<width>22</width>
					<height>22</height>
					<aspectratio>keep</aspectratio>
					<texture>PVR-HasTimer.png</texture>
				</control>
				<control type="label">
					<description>Next Timer Header label</description>
					<left>10</left>
					<top>2</top>
					<height>25</height>
					<width>350</width>
					<label>$LOCALIZE[19157]</label>
					<align>right</align>
					<aligny>center</aligny>
					<font>Medium18</font>
					<textcolor>selected</textcolor>
					<!-- MOD -->
					<visible>Container(9000).HasFocus(12)</visible>
					<animation effect="fade" start="0" end="100" time="300" delay="350">Visible</animation>
				</control>
				<control type="label">
					<description>NextRecordingDateTime</description>
					<left>10</left>
					<top>30</top>
					<height>25</height>
					<width>380</width>
					<label>$INFO[PVR.NextRecordingDateTime,$LOCALIZE[19126]:  ]</label>
					<align>right</align>
					<aligny>center</aligny>
					<font>Regular17</font>
					<scroll>true</scroll>
					<!--<shadowcolor>black</shadowcolor>-->
					<!-- MOD -->
					<visible>Container(9000).HasFocus(12)</visible>
					<animation effect="fade" start="0" end="100" time="300" delay="350">Visible</animation>
				</control>
				<control type="label">
					<description>NextRecordingTitle Channel</description>
					<left>10</left>
					<top>50</top>
					<height>30</height>
					<width>380</width>
					<label>$INFO[PVR.NextRecordingTitle][COLOR=grey]$INFO[PVR.NextRecordingChannel, [COLOR=grey]([/COLOR],[COLOR=grey])[/COLOR]][/COLOR]</label>
					<align>right</align>
					<aligny>center</aligny>
					<font>Regular17</font>
					<!--<shadowcolor>black</shadowcolor>-->
					<scroll>true</scroll>
					<!-- MOD -->
					<visible>Container(9000).HasFocus(12)</visible>
					<animation effect="fade" start="0" end="100" time="300" delay="350">Visible</animation>
				</control>
			</control>
			<control type="group">
				<visible>PVR.IsRecording</visible>
				<control type="group">
					<control type="image">
						<left>361</left>
						<top>-5</top>
						<width>214</width>
						<height>90</height>
						<texture>_added_img/100x100_black.png</texture>
						<!-- MOD -->
						<visible>!Container(9000).HasFocus(12)</visible>
						<animation effect="fade" start="100" end="0" time="350" delay="350">Hidden</animation>
					</control>
					<control type="image">
						<left>0</left>
						<top>-5</top>
						<width>490</width>
						<height>90</height>
						<texture>_added_img/100x100_black.png</texture>
						<!-- MOD -->
						<visible>Container(9000).HasFocus(12)</visible>
						<animation effect="fade" start="0" end="100" time="650" delay="0">Visible</animation>
					</control>
					<animation effect="fade" start="0" end="40" time="0" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<left>400</left>
					<top>0</top>
					<width>80</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" fallback="DefaultVideoCover.png">$INFO[PVR.NowRecordingChannelIcon]</texture>
					<bordertexture border="8">ThumbBorder666.png</bordertexture>
					<bordersize>4</bordersize>
				</control>
				<control type="image">
					<left>362</left>
					<top>4</top>
					<width>30</width>
					<height>25</height>
					<aspectratio>keep</aspectratio>
					<texture>PVR-IsRecording.png</texture>
				</control>
				<control type="label">
					<description>Is Recording Header label</description>
					<left>10</left>
					<top>2</top>
					<height>25</height>
					<width>350</width>
					<label>$LOCALIZE[19158]</label>
					<align>right</align>
					<aligny>center</aligny>
					<font>Medium18</font>
					<textcolor>selected</textcolor>
					<!-- MOD -->
					<visible>Container(9000).HasFocus(12)</visible>
					<animation effect="fade" start="0" end="100" time="300" delay="350">Visible</animation>
				</control>
				<control type="label">
					<description>NextRecordingDateTime</description>
					<left>10</left>
					<top>30</top>
					<height>25</height>
					<width>380</width>
					<label>$INFO[PVR.NowRecordingDateTime,$LOCALIZE[19126]:  ]</label>
					<align>right</align>
					<aligny>center</aligny>
					<font>Regular17</font>
					<scroll>true</scroll>
					<!--<shadowcolor>black</shadowcolor>-->
					<!-- MOD -->
					<visible>Container(9000).HasFocus(12)</visible>
					<animation effect="fade" start="0" end="100" time="300" delay="350">Visible</animation>
				</control>
				<control type="label">
					<description>NextRecordingTitle Channel</description>
					<left>10</left>
					<top>50</top>
					<height>30</height>
					<width>380</width>
					<label>$INFO[PVR.NowRecordingTitle][COLOR=grey]$INFO[PVR.NowRecordingChannel, [COLOR=grey]([/COLOR],[COLOR=grey])[/COLOR]][/COLOR]</label>
					<align>right</align>
					<aligny>center</aligny>
					<font>Regular17</font>
					<!--<shadowcolor>black</shadowcolor>-->
					<scroll>true</scroll>
					<!-- MOD -->
					<visible>Container(9000).HasFocus(12)</visible>
					<animation effect="fade" start="0" end="100" time="300" delay="350">Visible</animation>
				</control>
			</control>
		</control>
		
		
		<include condition="!Skin.HasSetting(HomepageHideWidgetFavorites) | !Skin.HasSetting(HomepageHideRecentlyAddedVideo) | !Skin.HasSetting(HomepageHideRecentlyPlayedLiveTV) | !Skin.HasSetting(HomepageHideRecentlyAddedAlbums)">HomeRecentlyAddedInfo</include>
		
		
		

		
		<control type="image">
			<left>0</left>
			<top>290</top>
			<width>1280</width>
			<height>80</height>
			<texture flipx="true" flipy="true" border="4">HomeSubNF.png</texture>
			<animation effect="fade" end="0" time="0" condition="true">Conditional</animation>
		</control>
		
		
		<control type="button" id="9003">
			<description>Hidden Button to pass through navigation when recently added is disabled</description>
			<left>-20</left>
			<top>-20</top>
			<width>1</width>
			<height>1</height>
			<label></label>
			<font></font>
			<texturefocus></texturefocus>
			<texturenofocus></texturenofocus>
			<onleft>9000</onleft>
			<onright>9000</onright>
			<onup>600</onup>
			<ondown>9000</ondown>
			<visible>false</visible>
		</control>
		
		<control type="group" id="600">
			<depth>DepthMenu-</depth>
			<description>Controls for currently playing media</description>
			<left>0</left>
			<top>10</top>
			
			<animation type="WindowOpen" reversible="false">
				<effect type="zoom" start="80" end="100" center="640,360" easing="out" tween="back" time="225" />
				<effect type="fade" start="0" end="100" time="225" /><!-- 92 !!! -->
			</animation>
			<animation type="WindowClose" reversible="false">
				<effect type="zoom" start="100" end="80" center="640,360" easing="in" tween="back" time="225" />
				<effect type="fade" start="100" end="0" time="225" /><!-- 92 !!! -->
			</animation>
			
			<defaultcontrol always="true">601</defaultcontrol>
			
			<control type="image">
				<include>idleFadeOutMinimal</include>
				<left>10</left>
				<top>-4</top>
				<width>50</width>
				<height>50</height>
				<aspectratio>keep</aspectratio>
				<texture>kodi-logo.png</texture>
				<include>VisibleFadeEffect</include>
				<include>Window_OpenClose_Animation</include>
				<visible>String.IsEmpty(Skin.String(HomeScreenKodiLogo)) | String.IsEqual(Skin.String(HomeScreenKodiLogo),0)</visible>
			</control>
			<control type="image">
				<include>idleFadeOutMinimal</include>
				<left>10</left>
				<top>-4</top>
				<width>50</width>
				<height>50</height>
				<aspectratio>keep</aspectratio>
				<texture>_added_img/madvr-logo.png</texture>
				<include>VisibleFadeEffect</include>
				<include>Window_OpenClose_Animation</include>
				<visible>String.IsEqual(Skin.String(HomeScreenKodiLogo),2)</visible>
			</control>
			
			<control type="group">
			<include>idleFadeOutFull</include>
			<control type="radiobutton" id="601">
				<animation effect="slide" start="0,0" end="-46,0" time="0" condition="String.IsEqual(Skin.String(HomeScreenKodiLogo),1)">conditional</animation>
				<left>56</left>
				<top>0</top>
				<height>40</height>
				<width>114</width>
				<textwidth>92</textwidth>
				<radioposx>10</radioposx>
				<radioposy>9</radioposy>
				<textoffsetx>42</textoffsetx>
				<align>left</align>
				<aligny>center</aligny>
				<font>Regular19</font>
				<textcolor>grey2</textcolor>
				<focusedcolor>white</focusedcolor>
				<texturefocus flipy="true" border="4">HomeSubFO.png</texturefocus>
				<texturenofocus flipy="true" border="4" colordiffuse="f5FFFFFF">HomeSubNF666.png</texturenofocus>
				<pulseonselect>false</pulseonselect>
				<label>137</label>
				
				<onclick condition="String.IsEqual(Skin.String(HomeScreenSearchButton),0) | String.IsEmpty(Skin.String(HomeScreenSearchButton))">ActivateWindow(1107)</onclick>
				
				<onclick condition="String.IsEqual(Skin.String(HomeScreenSearchButton),2)">Dialog.Close(all)</onclick>
				<onclick condition="String.IsEqual(Skin.String(HomeScreenSearchButton),2)">ActivateWindow(Videos,return)</onclick>
				<onclick condition="String.IsEqual(Skin.String(HomeScreenSearchButton),2)">VideoLibrary.Search</onclick>
				
				<textureradioonfocus colordiffuse="ffFFFFFF">icon_search.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="b6FFFFFF">icon_search.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="ffFFFFFF">icon_search.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="b6FFFFFF">icon_search.png</textureradiooffnofocus>
				<onleft>605</onleft>
				<onright>602</onright>
				<onup>noop</onup>
				<ondown>9003</ondown>
				<visible>String.IsEqual(Skin.String(HomeScreenSearchButton),0) | String.IsEmpty(Skin.String(HomeScreenSearchButton)) | String.IsEqual(Skin.String(HomeScreenSearchButton),2)</visible>
			</control>
			
			<control type="radiobutton" id="602">
				<animation effect="slide" start="0,0" end="-114,0" time="0" condition="String.IsEqual(Skin.String(HomeScreenSearchButton),1)">conditional</animation>
				<animation effect="slide" start="0,0" end="-46,0" time="0" condition="String.IsEqual(Skin.String(HomeScreenKodiLogo),1)">conditional</animation>
				<left>170</left>
				<top>0</top>
				<height>40</height>
				<width>110</width>
				<textwidth>92</textwidth>
				<radioposx>10</radioposx>
				<radioposy>9</radioposy>
				<textoffsetx>42</textoffsetx>
				<align>left</align>
				<aligny>center</aligny>
				<font>Regular19</font>
				<textcolor>grey2</textcolor>
				<focusedcolor>white</focusedcolor>
				<texturefocus flipy="true" border="4">HomeSubFO.png</texturefocus>
				<texturenofocus flipy="true" border="4" colordiffuse="f5FFFFFF">HomeSubNF666.png</texturenofocus>
				<pulseonselect>false</pulseonselect>
				<label>$LOCALIZE[33060]</label>
				<onclick>ActivateWindow(ShutdownMenu)</onclick>
				<textureradioonfocus colordiffuse="ffFFFFFF">icon_power.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="b6FFFFFF">icon_power.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="ffFFFFFF">icon_power.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="b6FFFFFF">icon_power.png</textureradiooffnofocus>
				<onleft>601</onleft>
				<onright>603</onright>
				<onup>noop</onup>
				<ondown>9003</ondown>
			</control>
			
			<control type="togglebutton" id="603">
				<animation effect="slide" start="0,0" end="-114,0" time="0" condition="String.IsEqual(Skin.String(HomeScreenSearchButton),1)">conditional</animation>
				<animation effect="slide" start="0,0" end="-46,0" time="0" condition="String.IsEqual(Skin.String(HomeScreenKodiLogo),1)">conditional</animation>
				<left>290</left>
				<top>0</top>
				<height>40</height>
				<width>40</width>
				<textwidth>92</textwidth>
				<radioposx>10</radioposx>
				<radioposy>9</radioposy>
				<textoffsetx>42</textoffsetx>
				<align>left</align>
				<aligny>center</aligny>
				<texturefocus>osd/buttons/OSDPauseFO.png</texturefocus>
				<texturenofocus>osd/buttons/OSDPauseNF.png</texturenofocus>
				<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
				<alttexturefocus>osd/buttons/OSDPlayFO.png</alttexturefocus>
				<alttexturenofocus>osd/buttons/OSDPlayNF.png</alttexturenofocus>
				<onleft>602</onleft>
				<onright>604</onright>
				<onup>noop</onup>
				<ondown>9003</ondown>
				<onclick>PlayerControl(Play)</onclick>
				<label></label>
				<visible>[Player.HasMedia + [Player.HasVideo | Player.HasAudio]] + !VideoPlayer.Content(LiveTV)</visible>
			</control>
			
			<control type="togglebutton" id="604">
				<animation effect="slide" start="0,0" end="-40,0" time="0" condition="VideoPlayer.Content(LiveTV)">conditional</animation>
				<animation effect="slide" start="0,0" end="-114,0" time="0" condition="String.IsEqual(Skin.String(HomeScreenSearchButton),1)">conditional</animation>
				<animation effect="slide" start="0,0" end="-46,0" time="0" condition="String.IsEqual(Skin.String(HomeScreenKodiLogo),1)">conditional</animation>
				<left>330</left>
				<top>0</top>
				<height>40</height>
				<width>40</width>
				<textwidth>92</textwidth>
				<radioposx>10</radioposx>
				<radioposy>9</radioposy>
				<textoffsetx>42</textoffsetx>
				<align>left</align>
				<aligny>center</aligny>
				<texturefocus>osd/buttons/OSDStopFO.png</texturefocus>
				<texturenofocus>osd/buttons/OSDStopNF.png</texturenofocus>
				<usealttexture>false</usealttexture>
				<alttexturefocus>osd/buttons/OSDStopNF.png</alttexturefocus>
				<alttexturenofocus>osd/buttons/OSDStopNF.png</alttexturenofocus>
				<onleft>603</onleft>
				<onright>605</onright>
				<onup>noop</onup>
				<ondown>9003</ondown>
				<onclick>PlayerControl(Stop)</onclick>
				<label></label>
				<visible>[Player.HasMedia + [Player.HasVideo | Player.HasAudio]]</visible>
			</control>
			
			<control type="togglebutton" id="605">
				<animation effect="slide" start="0,0" end="-40,0" time="0" condition="VideoPlayer.Content(LiveTV)">conditional</animation>
				<animation effect="slide" start="0,0" end="-114,0" time="0" condition="String.IsEqual(Skin.String(HomeScreenSearchButton),1)">conditional</animation>
				<animation effect="slide" start="0,0" end="-46,0" time="0" condition="String.IsEqual(Skin.String(HomeScreenKodiLogo),1)">conditional</animation>
				<left>370</left>
				<top>0</top>
				<height>40</height>
				<width>40</width>
				<texturefocus>osd/buttons/OSDRecordOffFO.png</texturefocus>
				<texturenofocus>osd/buttons/OSDRecordOffNF.png</texturenofocus>
				<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
				<alttexturefocus>osd/buttons/OSDRecordOnFO.png</alttexturefocus>
				<alttexturenofocus>osd/buttons/OSDRecordOnNF.png</alttexturenofocus>
				<onleft>604</onleft>
				<onright>601</onright>
				<onup>noop</onup>
				<ondown>9003</ondown>
				<onclick>PVR.ToggleRecordPlayingChannel</onclick>
				<label></label>
				<visible>[Player.HasMedia + [Player.HasVideo | Player.HasAudio]] + VideoPlayer.Content(LiveTV) + Player.CanRecord</visible>
			</control>
			</control>
			
		</control>
		
		
		
		
		
		<!-- MAIN MENU + SUB MENUS -->
		<control type="group">
		<control type="group">
		<include>idleFadeOutFull</include>
			<depth>DepthMenu</depth>
			<top>380</top>
			<!-- TRANSPARENCY TEST -->
			<!--<animation effect="fade" end="95" time="0" condition="true">Conditional</animation>-->
			<animation type="WindowOpen" reversible="false">
				<effect type="zoom" start="80" end="100" center="640,360" easing="out" tween="back" time="225" />
				<effect type="fade" start="0" end="100" time="225" />
			</animation>
			<animation type="WindowClose" reversible="false">
				<effect type="zoom" start="100" end="80" center="640,360" easing="in" tween="back" time="225" />
				<effect type="fade" start="100" end="0" time="225" />
			</animation>
			<!-- SUB MENU -->
			<control type="group" id="9001">
				<depth>DepthMenu-</depth>
				<left>0</left>
				<top>80</top>
				<onup>9000</onup>
				<ondown>9002</ondown>
				
				<visible>!Skin.HasSetting(KioskModeEnabled)</visible>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="19" />
					</include>
					<control type="grouplist" id="9019">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9019</onleft>
						<onright>9019</onright>
						<visible>Container(9000).HasFocus(19)</visible>
						<include>HomeSubMenuFavorites</include>
					</control>
				</control>
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="199" />
					</include>
					<control type="grouplist" id="90199">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9019</onleft>
						<onright>9019</onright>
						<visible>Container(9000).HasFocus(199)</visible>
						<include>HomeSubMenuFavorites</include>
					</control>
				</control>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="10" />
					</include>
					<control type="grouplist" id="9016">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9016</onleft>
						<onright>9016</onright>
						<visible>Container(9000).HasFocus(10)</visible>
						<include>HomeSubMenuMovies</include>
					</control>
				</control>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="11" />
					</include>
					<control type="grouplist" id="9017">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9017</onleft>
						<onright>9017</onright>
						<visible>Container(9000).HasFocus(11)</visible>
						<include>HomeSubMenuTVShows</include>
					</control>
				</control>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="2" />
					</include>
					<control type="grouplist" id="9010">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9010</onleft>
						<onright>9010</onright>
						<visible>Container(9000).HasFocus(2)</visible>
						<include>HomeSubMenuVideos</include>
					</control>
				</control>
				
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="12" />
					</include>
					<control type="grouplist" id="9014">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9014</onleft>
						<onright>9014</onright>
						<visible>Container(9000).HasFocus(12)</visible>
						<include>HomeSubMenuTV</include>
					</control>
				</control>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="13" />
					</include>
					<control type="grouplist" id="9024">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9024</onleft>
						<onright>9024</onright>
						<visible>Container(9000).HasFocus(13)</visible>
						<include>HomeSubMenuRadio</include>
					</control>
				</control>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="3" />
					</include>
					<control type="grouplist" id="9011">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9011</onleft>
						<onright>9011</onright>
						<visible>Container(9000).HasFocus(3)</visible>
						<include>HomeSubMenuMusic</include>
					</control>
				</control>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="4" />
					</include>
					<control type="grouplist" id="9015">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9015</onleft>
						<onright>9015</onright>
						<visible>Container(9000).HasFocus(4)</visible>
						<include>HomeSubMenuPictures</include>
					</control>
				</control>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="7" />
					</include>
					<control type="grouplist" id="9019">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9019</onleft>
						<onright>9019</onright>
						<visible>Container(9000).HasFocus(7)</visible>
						<include>HomeSubMenuWeather</include>
					</control>
				</control>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="1" />
					</include>
					<control type="grouplist" id="9018">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9018</onleft>
						<onright>9018</onright>
						<visible>Container(9000).HasFocus(1)</visible>
						<include>HomeSubMenuAddons</include>
					</control>
				</control>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="6" />
					</include>
					<control type="grouplist" id="9013">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9013</onleft>
						<onright>9013</onright>
						<visible>Container(9000).HasFocus(6)</visible>
						<include>HomeSubMenuPlayDisc</include>
					</control>
				</control>
				
				<control type="group">
					<include content="HomeSubMenuBackground">
						<param name="uid" value="5" />
					</include>
					<control type="grouplist" id="9012">
						<include>HomeSubMenuCommonValues</include>
						<onleft>9012</onleft>
						<onright>9012</onright>
						<visible>Container(9000).HasFocus(5)</visible>
						<include>HomeSubMenuSystem</include>
					</control>
				</control>
				
				<animation effect="fade" end="92" time="0" condition="true">Conditional</animation><!-- 95 now 92-->
				
			</control>
			<control type="image">
				<left>0</left>
				<top>-40</top>
				<width>1280</width>
				<height>120</height>
				<!--
				<texture>HomeBack.png</texture>
				-->
				<texture>_added_img/100x100_black_almost.png</texture>
				<animation effect="fade" end="85" time="0" condition="true">Conditional</animation><!-- 95 88 now 85 test -->
			</control>
			
			
			
			
			
			
			<!-- MAIN MENU -->
			<control type="fixedlist" id="9000">
				<left>2</left>
				<top>-40</top>
				<width>1275</width><!-- 1276 cut -1 for fixedlist -->
				<height>120</height>
				<onleft>9000</onleft>
				<onright>9000</onright>
				
				<onup>9003</onup>
				
				<ondown condition="Container(9000).Hasfocus(10)">9016</ondown>
				<ondown condition="Container(9000).Hasfocus(11)">9017</ondown>
				<ondown condition="Container(9000).Hasfocus(2)">9010</ondown>
				<ondown condition="Container(9000).Hasfocus(12)">9014</ondown>
				<ondown condition="Container(9000).Hasfocus(13)">9024</ondown>
				<ondown condition="Container(9000).Hasfocus(3)">9011</ondown>
				<ondown condition="Container(9000).Hasfocus(4)">9015</ondown>
				<ondown condition="Container(9000).Hasfocus(7)">9019</ondown>
				<ondown condition="Container(9000).Hasfocus(1)">9018</ondown>
				<ondown condition="Container(9000).Hasfocus(6)">9013</ondown>
				<ondown condition="Container(9000).Hasfocus(5)">9012</ondown>
				
				<ondown>9001</ondown>
				
				<pagecontrol></pagecontrol>
				<scrolltime>200</scrolltime><!-- 300 -->
				<focusposition>5</focusposition>
				<movement>99</movement>
				
	
				<!-- KODI 18 defaultcontrol bug fix -->
				<!--
				<defaultcontrol always="false">10</defaultcontrol>
				-->
				<!--
				<onfocus condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix))">SetProperty(HomeDefaultControlTempFix,True,home)</onfocus>
				-->
				<!--
				<onfocus condition="String.IsEqual(Container(9000).ListItem.Property(id),10)">SetProperty(HomeDefaultControlTempFixId,10,home)</onfocus>
				<onfocus condition="String.IsEqual(Container(9000).ListItem.Property(id),12)">SetProperty(HomeDefaultControlTempFixId,12,home)</onfocus>
				-->
				<!--
				<defaultcontrol always="false"></defaultcontrol>
				-->
				
				
				<!--
				<include condition="!String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + String.IsEqual(Window(home).Property(HomeDefaultControlTempFixId),10)" 
						content="setDefaultControlAlways">
					<param name="uid" value="10" />
				</include>
				
				<include condition="!String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + String.IsEqual(Window(home).Property(HomeDefaultControlTempFixId),10)" 
						content="setDefaultControlAlways">
					<param name="uid" value="10" />
				</include>
				<include condition="!String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + String.IsEqual(Window(home).Property(HomeDefaultControlTempFixId),12)" 
						content="setDefaultControlAlways">
					<param name="uid" value="12" />
				</include>
				
				
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + [!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="19" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									[!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="10" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									![!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)] + 
									[!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="11" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									![!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)] + 
									![!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)] + 
									[!Skin.HasSetting(HomeMenuNoVideosButton)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="2" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									![!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)] + 
									![!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)] + 
									![!Skin.HasSetting(HomeMenuNoVideosButton)] + 
									[!Skin.HasSetting(HomeMenuNoPVRTVButton)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="12" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									![!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)] + 
									![!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)] + 
									![!Skin.HasSetting(HomeMenuNoVideosButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRTVButton)] + 
									[!Skin.HasSetting(HomeMenuNoPVRRadioButton)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="13" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									![!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)] + 
									![!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)] + 
									![!Skin.HasSetting(HomeMenuNoVideosButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRTVButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRRadioButton)] + 
									[!Skin.HasSetting(HomeMenuNoMusicButton)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="3" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									![!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)] + 
									![!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)] + 
									![!Skin.HasSetting(HomeMenuNoVideosButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRTVButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRRadioButton)] + 
									![!Skin.HasSetting(HomeMenuNoMusicButton)] + 
									[!Skin.HasSetting(HomeMenuNoPicturesButton)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="4" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									![!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)] + 
									![!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)] + 
									![!Skin.HasSetting(HomeMenuNoVideosButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRTVButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRRadioButton)] + 
									![!Skin.HasSetting(HomeMenuNoMusicButton)] + 
									![!Skin.HasSetting(HomeMenuNoPicturesButton)] + 
									[!Skin.HasSetting(HomeMenuNoWeatherButton)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="7" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									![!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)] + 
									![!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)] + 
									![!Skin.HasSetting(HomeMenuNoVideosButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRTVButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRRadioButton)] + 
									![!Skin.HasSetting(HomeMenuNoMusicButton)] + 
									![!Skin.HasSetting(HomeMenuNoPicturesButton)] + 
									![!Skin.HasSetting(HomeMenuNoWeatherButton)] + 
									[!Skin.HasSetting(HomeMenuNoProgramsButton)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="1" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									![!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)] + 
									![!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)] + 
									![!Skin.HasSetting(HomeMenuNoVideosButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRTVButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRRadioButton)] + 
									![!Skin.HasSetting(HomeMenuNoMusicButton)] + 
									![!Skin.HasSetting(HomeMenuNoPicturesButton)] + 
									![!Skin.HasSetting(HomeMenuNoWeatherButton)] + 
									![!Skin.HasSetting(HomeMenuNoProgramsButton)] + 
									[!Skin.HasSetting(HomeMenuNoPlayDiscButton) + System.HasMediaDVD]" 
						content="setDefaultControlAlways">
					<param name="uid" value="6" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(HomeDefaultControlTempFix)) + ![!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)] + 
									![!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)] + 
									![!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)] + 
									![!Skin.HasSetting(HomeMenuNoVideosButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRTVButton)] + 
									![!Skin.HasSetting(HomeMenuNoPVRRadioButton)] + 
									![!Skin.HasSetting(HomeMenuNoMusicButton)] + 
									![!Skin.HasSetting(HomeMenuNoPicturesButton)] + 
									![!Skin.HasSetting(HomeMenuNoWeatherButton)] + 
									![!Skin.HasSetting(HomeMenuNoProgramsButton)] + 
									![!Skin.HasSetting(HomeMenuNoPlayDiscButton) + System.HasMediaDVD]" 
						content="setDefaultControlAlways">
					<param name="uid" value="5" />
				</include>
				-->
				
				<orientation>Horizontal</orientation>
				<animation effect="slide" start="0,0" end="-58,0" time="0" condition="String.IsEqual(Container(9000).NumItems,10) | String.IsEqual(Container(9000).NumItems,8) | String.IsEqual(Container(9000).NumItems,6) | String.IsEqual(Container(9000).NumItems,4) | String.IsEqual(Container(9000).NumItems,2)">conditional</animation>
				<!-- itemlayout -->
				<itemlayout height="120" width="116">
					<control type="image">
						<left>6</left>
						<top>26</top>
						<width>104</width>
						<height>68</height>
						<aspectratio>scale</aspectratio>
						<texture background="true" colordiffuse="cc666666">$INFO[ListItem.Icon]</texture>
						<!--
						<animation effect="fade" end="40" time="0" condition="true">Conditional</animation>
						-->
					</control>
				</itemlayout>
				<!-- focusedlayout -->
				<focusedlayout height="120" width="116">
				
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>116</width>
						<height>120</height>
						<aspectratio>stretch</aspectratio>
						<texture background="true" border="4" colordiffuse="d9ffffff">_added_img/main_menu_button-focus.png</texture>
						<visible>Control.HasFocus(9000)</visible>
						<animation effect="fade" end="100" time="0">Visible</animation>
						<animation effect="fade" end="0" time="300">Hidden</animation>
					</control>
					
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>116</width>
						<height>120</height>
						<aspectratio>stretch</aspectratio>
						<texture background="true" border="4" colordiffuse="d9ffffff">_added_img/main_menu_button-focus-inactive.png</texture>
						<visible>!Control.HasFocus(9000)</visible>
						<animation effect="fade" end="100" time="300">Visible</animation>
						<animation effect="fade" end="0" time="300">Hidden</animation>
					</control>
					
					<control type="image">
						<left>6</left>
						<top>26</top>
						<width>104</width>
						<height>68</height>
						<aspectratio>scale</aspectratio>
						<texture>$INFO[ListItem.Icon]</texture>
						<animation effect="slide" start="0,0" end="0,-14" time="400" tween="quadratic" easing="out">Focus</animation>
						<visible>Control.HasFocus(9000)</visible>
					</control>

					<control type="image">
						<left>6</left>
						<top>26</top>
						<width>104</width>
						<height>68</height>
						<aspectratio>scale</aspectratio>
						<texture>$INFO[ListItem.Icon]</texture>
						<visible>!Control.HasFocus(9000)</visible>
					</control>
					
					<control type="label">
						<left>0</left>
						<top>64</top>
						<width>116</width>
						<height>50</height>
						<font>Regular23</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
						<visible>Control.HasFocus(9000)</visible>
						<animation effect="fade" end="100" time="400">Visible</animation>
						<animation effect="fade" end="100" time="400">Focus</animation>
						<animation effect="fade" end="0" time="150">Hidden</animation>
					</control>
					
					<control type="group">
						<control type="image">
							<left>0</left>
							<top>74</top>
							<width>116</width>
							<height>1</height>
							<aspectratio>stretch</aspectratio>
							<texture background="true">_added_img/main_menu_button-white.png</texture>
							<animation effect="fade" start="0" end="100" time="400">Focus</animation>
						</control>
						<visible>Control.HasFocus(9000) + false</visible>
						<animation effect="fade" end="20" time="0" condition="true">Conditional</animation>
					</control>
					
				</focusedlayout>
				
				<!-- CONTENT -->
				<content>
					
					
					<item id="19">
						<label>[UPPERCASE]$LOCALIZE[1036][/UPPERCASE]</label>
						<onclick>ActivateWindow(Favourites)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_favorites.png</icon>
						<thumb></thumb>
						<visible>!Skin.HasSetting(HomeMenuNoFavoritesButton) + Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)</visible>
						<property name="id">19</property>
					</item>
					<item id="10">
						<label>31954</label>
						<onclick>ActivateWindow(Videos,MovieTitles,return)</onclick>
						<!--
						<onclick>ActivateWindow(1170)</onclick>
						-->
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_movies.png</icon>
						<thumb></thumb>
						<visible>!Skin.HasSetting(HomeMenuNoMovieButton) + Library.HasContent(Movies)</visible>
						<property name="id">10</property>
					</item>
					<item id="11">
						<label>31955</label>
						<onclick>ActivateWindow(Videos,TVShowTitles,return)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_tvshows.png</icon>
						<thumb></thumb>
						<visible>!Skin.HasSetting(HomeMenuNoTVShowButton) + Library.HasContent(TVShows)</visible>
						<property name="id">11</property>
					</item>
					<item id="2">
						<label>31953</label>
						<onclick condition="String.IsEqual(Window.Property(VideosDirectLink),True)">ActivateWindow(Videos)</onclick>
						<onclick condition="!String.IsEqual(Window.Property(VideosDirectLink),True)">ActivateWindow(Videos,root)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_videos.png</icon>
						<thumb></thumb>
						<visible>!Skin.HasSetting(HomeMenuNoVideosButton)</visible>
						<property name="id">2</property>
					</item>
					<item id="12">
						<label>31952</label>
						<onclick>ActivateWindow(TVChannels)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_tv.png</icon>
						<thumb></thumb>
						<!--<visible>PVR.HasTVChannels</visible>-->
						<visible>!Skin.HasSetting(HomeMenuNoPVRTVButton)</visible>
						<property name="id">12</property>
					</item>
					<item id="13">
						<label>31960</label>
						<onclick>ActivateWindow(RadioChannels)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_radio.png</icon>
						<thumb></thumb>
						<!--<visible>PVR.HasRadioChannels</visible>-->
						<visible>!Skin.HasSetting(HomeMenuNoPVRRadioButton)</visible>
						<property name="id">13</property>
					</item>
					<item id="3">
						<label>31956</label>
						<onclick condition="String.IsEqual(Window.Property(MusicDirectLink),True)">ActivateWindow(Music)</onclick>
						<onclick condition="!String.IsEqual(Window.Property(MusicDirectLink),True)">ActivateWindow(Music,root)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_music.png</icon>
						<thumb></thumb>
						<visible>!Skin.HasSetting(HomeMenuNoMusicButton)</visible>
						<property name="id">3</property>
					</item>
					<item id="4">
						<label>31951</label>
						<onclick>ActivateWindow(Pictures)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_pictures.png</icon>
						<thumb></thumb>
						<visible>!Skin.HasSetting(HomeMenuNoPicturesButton)</visible>
						<property name="id">4</property>
					</item>
					<item id="7">
						<label>31950</label>
						<onclick condition="!String.IsEmpty(Weather.Plugin)">ActivateWindow(Weather)</onclick>
						<onclick condition="String.IsEmpty(Weather.Plugin)">ActivateWindow(servicesettings,weather)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_weather.png</icon>
						<thumb></thumb>
						<visible>!Skin.HasSetting(HomeMenuNoWeatherButton)</visible>
						<property name="id">7</property>
					</item>
					<item id="1">
						<label>[UPPERCASE]$LOCALIZE[24001][/UPPERCASE]</label>
						<!--<onclick>ActivateWindow(videos,addons://sources/video/,return)</onclick>-->
						<onclick>ActivateWindow(AddonBrowser)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_programs.png</icon>
						<thumb></thumb>
						<visible>!Skin.HasSetting(HomeMenuNoProgramsButton)</visible>
						<property name="id">1</property>
					</item>
					<item id="6">
						<label>31958</label>
						<onclick>PlayDVD()</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_playdvd.png</icon>
						<thumb></thumb>
						<visible>!Skin.HasSetting(HomeMenuNoPlayDiscButton) + System.HasMediaDVD</visible>
						<property name="id">6</property>
					</item>
					<item id="199">
						<label>[UPPERCASE]$LOCALIZE[1036][/UPPERCASE]</label>
						<onclick>ActivateWindow(Favourites)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_favorites.png</icon>
						<thumb></thumb>
						<visible>!Skin.HasSetting(HomeMenuNoFavoritesButton) + !Skin.HasSetting(HomeMenuFavoritesButtonMakeFirstItem)</visible>
						<property name="id">199</property>
					</item>
					
					<item id="14">
						<label>31001</label>
						<onclick>ActivateWindow(Games)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_games.png</icon>
						<thumb></thumb>
						<visible>Skin.HasSetting(HomeMenuHasGamesButton)</visible>
						<property name="id">14</property>
					</item>
					
					<item id="5">
						<label>31959</label>
						<onclick>ActivateWindow(Settings)</onclick>
						<icon>home_icons/$VAR[isUhdScreenStringFolder]_home_icon_settings.png</icon>
						<thumb></thumb>
						<property name="id">5</property>
					</item>
				</content>
				
				
			</control>
			
			
			<control type="image">
				<left>0</left>
				<top>-40</top>
				<width>6</width>
				<height>120</height>
				<texture colordiffuse="FF333333">_added_img/main_menu_button-white.png</texture>
				<visible>Integer.IsGreater(Container(9000).NumItems,11) + 
						[ Integer.IsGreater(Container(9000).CurrentItem,6) ]</visible>
			</control>
			<control type="image">
				<left>1274</left>
				<top>-40</top>
				<width>6</width>
				<height>120</height>
				<texture colordiffuse="FF333333">_added_img/main_menu_button-white.png</texture>
				<visible>Integer.IsGreater(Container(9000).NumItems,11) + 
						[
						[ String.IsEqual(Container(9000).NumItems,12) + Integer.IsLess(Container(9000).Currentitem,7) ] | 
						[ String.IsEqual(Container(9000).NumItems,13) + Integer.IsLess(Container(9000).Currentitem,8) ]
						]</visible>
			</control>
			
			
		</control>
		</control>
		
		<!-- HOME WIDGETS -->
		<control type="group" id="9002">
			<include>idleFadeOutFull</include>
			<depth>DepthMenu</depth>
			
			<onup condition="Container(9000).Hasfocus(2)">9010</onup>
			<onup condition="Container(9000).Hasfocus(10)">9016</onup>
			<onup condition="Container(9000).Hasfocus(11)">9017</onup>
			
			<onup condition="Container(9000).Hasfocus(12)">9014</onup>
			<onup condition="Container(9000).Hasfocus(13)">9024</onup>
			
			<onup condition="Container(9000).Hasfocus(3)">9011</onup>
			<onup condition="Container(9000).Hasfocus(4)">9015</onup>
			
			<onup condition="Container(9000).Hasfocus(1)">9018</onup>
			
			<onup>9001</onup>
			
			<ondown>20</ondown>
			
			<!-- FAVORITES -->
			<control type="fixedlist" id="709">
				<animation effect="slide" start="0,0" end="-91,0" time="0" condition="String.IsEqual(Container(709).NumItems,2) | String.IsEqual(Container(709).NumItems,4) | String.IsEqual(Container(709).NumItems,6)">conditional</animation>
				<visible>Container(9000).HasFocus(19) | Container(9000).HasFocus(199)</visible>
				<onleft>709</onleft>
				<onright>709</onright>
				<onup condition="Container(9000).Hasfocus(12)">9014</onup>
				<onup condition="Container(9000).Hasfocus(13)">9024</onup>
				<onup>9001</onup>
				<ondown>20</ondown>
				<include condition="[!String.IsEmpty(Skin.String(HomeFavoritesButton1))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900201" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeFavoritesButton1))] + 
									[!String.IsEmpty(Skin.String(HomeFavoritesButton2))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900202" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeFavoritesButton1))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton2))] + 
									[!String.IsEmpty(Skin.String(HomeFavoritesButton3))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900203" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeFavoritesButton1))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton2))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton3))] + 
									[!String.IsEmpty(Skin.String(HomeFavoritesButton4))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900204" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeFavoritesButton1))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton2))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton3))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton4))] + 
									[!String.IsEmpty(Skin.String(HomeFavoritesButton5))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900205" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeFavoritesButton1))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton2))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton3))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton4))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton5))] + 
									[!String.IsEmpty(Skin.String(HomeFavoritesButton6))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900206" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeFavoritesButton1))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton2))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton3))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton4))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton5))] + 
									![!String.IsEmpty(Skin.String(HomeFavoritesButton6))] + 
									[!String.IsEmpty(Skin.String(HomeFavoritesButton7))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900207" />
				</include>
				<include>HomeAddonsCommonLayout</include>
				<content>
					<include condition="!Skin.HasSetting(HomeScreenHideAddonShortcuts)">HomeAddonItemsFavorites</include>
				</content>
			</control>
			
			
			<!-- MOVIES, TV SHOWS, VIDEOS -->
			<control type="fixedlist" id="700">
				<animation effect="slide" start="0,0" end="-91,0" time="0" condition="String.IsEqual(Container(700).NumItems,2) | String.IsEqual(Container(700).NumItems,4) | String.IsEqual(Container(700).NumItems,6)">conditional</animation>
				<visible>Container(9000).HasFocus(2) | Container(9000).HasFocus(10) | Container(9000).HasFocus(11)</visible>
				<onleft>700</onleft>
				<onright>700</onright>
				<onup condition="Container(9000).Hasfocus(2)">9010</onup>
				<onup condition="Container(9000).Hasfocus(10)">9016</onup>
				<onup condition="Container(9000).Hasfocus(11)">9017</onup>
				<onup>9001</onup>
				<ondown>20</ondown>
				<include condition="[Skin.HasSetting(HomeVideosButtonSuperFolder1) + Skin.HasSetting(HomeVideosButtonSuperFolder1StartWith)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900211" />
				</include>
				<include condition="![Skin.HasSetting(HomeVideosButtonSuperFolder1) + Skin.HasSetting(HomeVideosButtonSuperFolder1StartWith)] + 
									[!String.IsEmpty(Skin.String(HomeVideosButton1))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900212" />
				</include>
				<include condition="![Skin.HasSetting(HomeVideosButtonSuperFolder1) + Skin.HasSetting(HomeVideosButtonSuperFolder1StartWith)] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton1))] + 
									[!String.IsEmpty(Skin.String(HomeVideosButton2))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900213" />
				</include>
				<include condition="![Skin.HasSetting(HomeVideosButtonSuperFolder1) + Skin.HasSetting(HomeVideosButtonSuperFolder1StartWith)] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton1))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton2))] + 
									[!String.IsEmpty(Skin.String(HomeVideosButton3))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900214" />
				</include>
				<include condition="![Skin.HasSetting(HomeVideosButtonSuperFolder1) + Skin.HasSetting(HomeVideosButtonSuperFolder1StartWith)] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton1))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton2))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton3))] + 
									[!String.IsEmpty(Skin.String(HomeVideosButton4))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900215" />
				</include>
				<include condition="![Skin.HasSetting(HomeVideosButtonSuperFolder1) + Skin.HasSetting(HomeVideosButtonSuperFolder1StartWith)] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton1))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton2))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton3))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton4))] + 
									[!String.IsEmpty(Skin.String(HomeVideosButton5))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900216" />
				</include>
				<include condition="![Skin.HasSetting(HomeVideosButtonSuperFolder1) + Skin.HasSetting(HomeVideosButtonSuperFolder1StartWith)] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton1))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton2))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton3))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton4))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton5))] + 
									[!String.IsEmpty(Skin.String(HomeVideosButton6))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900217" />
				</include>
				<include condition="![Skin.HasSetting(HomeVideosButtonSuperFolder1) + Skin.HasSetting(HomeVideosButtonSuperFolder1StartWith)] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton1))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton2))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton3))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton4))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton5))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton6))] + 
									[!String.IsEmpty(Skin.String(HomeVideosButton7))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900218" />
				</include>
				<include condition="![Skin.HasSetting(HomeVideosButtonSuperFolder1) + Skin.HasSetting(HomeVideosButtonSuperFolder1StartWith)] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton1))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton2))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton3))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton4))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton5))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton6))] + 
									![!String.IsEmpty(Skin.String(HomeVideosButton7))] + 
									[Skin.HasSetting(HomeVideosButtonSuperFolder1) + !Skin.HasSetting(HomeVideosButtonSuperFolder1StartWith)]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900219" />
				</include>
				<include>HomeAddonsCommonLayout</include>
				<content>
					<include condition="!Skin.HasSetting(HomeScreenHideAddonShortcuts)">HomeAddonItemsVideos</include>
				</content>
			</control>
			
			
			<!-- PVR -->
			<control type="fixedlist" id="706">
				<animation effect="slide" start="0,0" end="-91,0" time="0" condition="String.IsEqual(Container(706).NumItems,2) | String.IsEqual(Container(706).NumItems,4) | String.IsEqual(Container(706).NumItems,6)">conditional</animation>
				<visible>Container(9000).HasFocus(12) | Container(9000).HasFocus(13)</visible>
				<onleft>706</onleft>
				<onright>706</onright>
				<onup condition="Container(9000).Hasfocus(12)">9014</onup>
				<onup condition="Container(9000).Hasfocus(13)">9024</onup>
				<onup>9001</onup>
				<ondown>20</ondown>
				<include condition="[!String.IsEmpty(Skin.String(HomePVRButton1))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900221" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePVRButton1))] + 
									[!String.IsEmpty(Skin.String(HomePVRButton2))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900222" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePVRButton1))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton2))] + 
									[!String.IsEmpty(Skin.String(HomePVRButton3))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900223" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePVRButton1))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton2))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton3))] + 
									[!String.IsEmpty(Skin.String(HomePVRButton4))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900224" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePVRButton1))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton2))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton3))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton4))] + 
									[!String.IsEmpty(Skin.String(HomePVRButton5))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900225" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePVRButton1))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton2))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton3))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton4))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton5))] + 
									[!String.IsEmpty(Skin.String(HomePVRButton6))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900226" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePVRButton1))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton2))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton3))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton4))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton5))] + 
									![!String.IsEmpty(Skin.String(HomePVRButton6))] + 
									[!String.IsEmpty(Skin.String(HomePVRButton7))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900227" />
				</include>
				<include>HomeAddonsCommonLayout</include>
				<content>
					<include condition="!Skin.HasSetting(HomeScreenHideAddonShortcuts)">HomeAddonItemsPVR</include>
				</content>
			</control>
			
			
			<!-- MUSIC -->
			<control type="fixedlist" id="703">
				<animation effect="slide" start="0,0" end="-91,0" time="0" condition="String.IsEqual(Container(703).NumItems,2) | String.IsEqual(Container(703).NumItems,4) | String.IsEqual(Container(703).NumItems,6)">conditional</animation>
				<visible>Container(9000).HasFocus(3)</visible>
				<onleft>703</onleft>
				<onright>703</onright>
				<onup condition="Container(9000).Hasfocus(3)">9011</onup>
				<onup>9001</onup>
				<ondown>20</ondown>
				<include condition="[!String.IsEmpty(Skin.String(HomeMusicButton1))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900231" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeMusicButton1))] + 
									[!String.IsEmpty(Skin.String(HomeMusicButton2))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900232" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeMusicButton1))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton2))] + 
									[!String.IsEmpty(Skin.String(HomeMusicButton3))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900233" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeMusicButton1))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton2))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton3))] + 
									[!String.IsEmpty(Skin.String(HomeMusicButton4))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900234" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeMusicButton1))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton2))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton3))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton4))] + 
									[!String.IsEmpty(Skin.String(HomeMusicButton5))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900235" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeMusicButton1))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton2))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton3))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton4))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton5))] + 
									[!String.IsEmpty(Skin.String(HomeMusicButton6))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900236" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeMusicButton1))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton2))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton3))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton4))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton5))] + 
									![!String.IsEmpty(Skin.String(HomeMusicButton6))] + 
									[!String.IsEmpty(Skin.String(HomeMusicButton7))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900237" />
				</include>
				<include>HomeAddonsCommonLayout</include>
				<content>
					<include condition="!Skin.HasSetting(HomeScreenHideAddonShortcuts)">HomeAddonItemsMusic</include>
				</content>
			</control>
			
			<!-- PICTURES -->
			<control type="fixedlist" id="704">
				<animation effect="slide" start="0,0" end="-91,0" time="0" condition="String.IsEqual(Container(704).NumItems,2) | String.IsEqual(Container(704).NumItems,4) | String.IsEqual(Container(704).NumItems,6)">conditional</animation>
				<visible>Container(9000).HasFocus(4)</visible>
				<onleft>704</onleft>
				<onright>704</onright>
				<onup condition="Container(9000).Hasfocus(4)">9015</onup>
				<onup>9001</onup>
				<ondown>20</ondown>
				<include condition="[!String.IsEmpty(Skin.String(HomePictureButton1))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900241" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePictureButton1))] + 
									[!String.IsEmpty(Skin.String(HomePictureButton2))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900242" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePictureButton1))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton2))] + 
									[!String.IsEmpty(Skin.String(HomePictureButton3))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900243" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePictureButton1))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton2))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton3))] + 
									[!String.IsEmpty(Skin.String(HomePictureButton4))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900244" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePictureButton1))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton2))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton3))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton4))] + 
									[!String.IsEmpty(Skin.String(HomePictureButton5))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900245" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePictureButton1))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton2))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton3))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton4))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton5))] + 
									[!String.IsEmpty(Skin.String(HomePictureButton6))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900246" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomePictureButton1))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton2))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton3))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton4))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton5))] + 
									![!String.IsEmpty(Skin.String(HomePictureButton6))] + 
									[!String.IsEmpty(Skin.String(HomePictureButton7))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900247" />
				</include>
				<include>HomeAddonsCommonLayout</include>
				<content>
					<include condition="!Skin.HasSetting(HomeScreenHideAddonShortcuts)">HomeAddonItemsPictures</include>
				</content>
			</control>
			
			<!-- ADDONS -->
			<control type="fixedlist" id="705">
				<animation effect="slide" start="0,0" end="-91,0" time="0" condition="String.IsEqual(Container(705).NumItems,2) | String.IsEqual(Container(705).NumItems,4) | String.IsEqual(Container(705).NumItems,6)">conditional</animation>
				<visible>Container(9000).HasFocus(1)</visible>
				<onleft>705</onleft>
				<onright>705</onright>
				<onup condition="Container(9000).Hasfocus(1)">9018</onup>
				<onup>9001</onup>
				<ondown>20</ondown>
				<include condition="[!String.IsEmpty(Skin.String(HomeProgramButton1))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900251" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeProgramButton1))] + 
									[!String.IsEmpty(Skin.String(HomeProgramButton2))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900252" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeProgramButton1))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton2))] + 
									[!String.IsEmpty(Skin.String(HomeProgramButton3))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900253" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeProgramButton1))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton2))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton3))] + 
									[!String.IsEmpty(Skin.String(HomeProgramButton4))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900254" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeProgramButton1))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton2))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton3))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton4))] + 
									[!String.IsEmpty(Skin.String(HomeProgramButton5))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900255" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeProgramButton1))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton2))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton3))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton4))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton5))] + 
									[!String.IsEmpty(Skin.String(HomeProgramButton6))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900256" />
				</include>
				<include condition="![!String.IsEmpty(Skin.String(HomeProgramButton1))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton2))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton3))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton4))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton5))] + 
									![!String.IsEmpty(Skin.String(HomeProgramButton6))] + 
									[!String.IsEmpty(Skin.String(HomeProgramButton7))]" 
						content="setDefaultControlAlways">
					<param name="uid" value="900257" />
				</include>
				<include>HomeAddonsCommonLayout</include>
				<content>
					<include condition="!Skin.HasSetting(HomeScreenHideAddonShortcuts)">HomeAddonItemsPrograms</include>
				</content>
			</control>
		</control>
		
		
		
		<!-- rss ENABLED -->
		<control type="group">
			
			<depth>DepthMenu-</depth>
			<left>0</left>
			<top>32r</top>
			<visible>System.GetBool(lookandfeel.enablerssfeeds)</visible>
			<include>Window_OpenClose_Animation</include>
			<control type="rss">
				<description>RSS feed</description>
				<left>620</left>
				<top>0</top>
				<height>30</height>
				<width>628</width>
				<font>Regular17</font>
				<urlset>1</urlset>
				<textcolor>blue</textcolor>
				<titlecolor>blue</titlecolor>
				<headlinecolor>white</headlinecolor>
				<visible>[Player.HasMedia + [Player.HasVideo | Player.HasAudio]]</visible>
				<animation effect="fade" end="75" time="0" condition="true">Conditional</animation><!-- 80 before floor removal -->
			</control>
			<control type="rss">
				<description>RSS feed</description>
				<left>0</left><!-- 46 -->
				<top>0</top>
				<height>30</height>
				<width>1248</width><!-- 1199 + 1-->
				<font>Regular17</font>
				<urlset>1</urlset>
				<textcolor>blue</textcolor>
				<titlecolor>blue</titlecolor>
				<headlinecolor>white</headlinecolor>
				<visible>![Player.HasMedia + [Player.HasVideo | Player.HasAudio]]</visible>
				<animation effect="fade" end="75" time="0" condition="true">Conditional</animation><!-- 80 before floor removal -->
			</control>
			<control type="image">
				<description>RSS background</description>
				<left>1248</left>
				<top>0</top>
				<width>24</width>
				<height>24</height>
				<texture>icon-rss.png</texture>
			</control>
		</control>
		<!-- rss DISABLED -->
		<!--
		<control type="image">
			<description>RSS background</description>
			<left>1246</left>
			<top>32r</top>
			<width>24</width>
			<height>24</height>
			<texture>icon-rss.png</texture>
			<visible>!System.GetBool(lookandfeel.enablerssfeeds)</visible>
			<animation effect="fade" end="25" time="0" condition="true">Conditional</animation>
			<onclick>ActivateWindow(InterfaceSettings,other)</onclick>
		</control>
		-->
		
		<control type="group">
			<include>idleFadeOutMinimal</include>
			<depth>DepthFooter</depth>
			<include>CommonNowPlaying</include>
		</control>
		
		<control type="group">
			<include>idleFadeOutMinimal</include>
			<depth>DepthHeader</depth>
			
			<control type="grouplist">
				<orientation>horizontal</orientation>
				<align>right</align>
				<top>0</top>
				<right>20</right>
				
				<!-- MINI WEATHER INFO -->
				<control type="group">
					<!--
					<left>370r</left>
					<top>0</top>
					-->
					<width>90</width>
					<visible>!Window.IsVisible(SeekBar) + Skin.HasSetting(HomepageWeatherinfo) + !String.IsEmpty(Weather.Plugin)</visible>
					<include>Window_OpenClose_Animation</include>
					<control type="image">
						<description>Weather image</description>
						<left>0</left>
						<top>6</top>
						<width>40</width>
						<height>40</height>
						<aspectratio>keep</aspectratio>
						<texture>$INFO[Weather.ConditionsIcon]</texture>
						<fadetime>IconCrossfadeTime</fadetime>
						<include>VisibleFadeEffect</include>
						<visible>!String.IsEmpty(Weather.ConditionsIcon)</visible>
					</control>
					<control type="grouplist">
						<left>40</left>
						<top>12</top>
						<width>1000</width>
						<height>30</height>
						<orientation>horizontal</orientation>
						<align>left</align>
						<itemgap>0</itemgap>
						<control type="label">
							<description>Temp label</description>
							<width min="0" max="300">auto</width>
							<height>30</height>
							<align>left</align>
							<aligny>center</aligny>
							<font>Medium21</font>
							<textcolor>white</textcolor>
							<!--<shadowcolor>grey</shadowcolor>-->
							<label>$INFO[Window(Weather).Property(Current.Temperature)]</label>
						</control>
						<control type="label">
							<description>Temp Units</description>
							<width min="0" max="100">auto</width>
							<height>22</height>
							<font>Regular14</font>
							<aligny>center</aligny>
							<label>$INFO[System.TemperatureUnits]</label>
							<textcolor>white</textcolor>
							<!--<shadowcolor>grey</shadowcolor>-->
							<visible>!String.IsEmpty(Window(Weather).Property(Current.Temperature))</visible>
						</control>
					</control>
				</control>
				
				<control type="label">
					<description>Date label</description>
					<width>auto</width>
					<height>54</height><!--51-->
					<align>right</align>
					<aligny>center</aligny>
					<font>Regular15</font>
					<textcolor>white</textcolor>
					<!--
					<shadowcolor>grey</shadowcolor>
					-->
					<label>$INFO[System.Date]  </label>
					
					<include>Window_OpenClose_Animation</include>
					
					<visible>!Window.IsVisible(SeekBar)</visible>
				</control>
				
				<include>ClockHome</include>
				
				
				<animation effect="slide" start="0,0" end="-40,0" time="0" condition="Player.Muted">Conditional</animation>
				
			</control>
			
			
			
		</control>
		
		
		
		
		
		
		<!-- WRAPPER STOP -->
		</control>
		<!-- WRAPPER STOP -->
	</controls>
</window>
